# CICD using GitHub actions

name: CI/CD

# Exclude the workflow to run on changes to the helm chart
on:
  push:
    branches:
      - main
    paths-ignore:
      - "helm/**"
      - "README.md"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go 1.22.5
        uses: actions/setup-go@v5
        with:
          go-version: 1.22.5

      - name: Build
        run: go build -o go-web-app

      - name: Test
        run: go test ./...

  code-quality:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: v1.56.2
  sonar-server:
    runs-on: ubuntu-latest
    services:
      sonarqube:
        image: sonarqube:latest
        ports:
          - 9000:9000
        options: >-
          --health-cmd="curl -f http://localhost:9000 || exit 1"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
        env:
          SONARQUBE_JDBC_URL: "jdbc:postgresql://localhost:5432/sonarqube"
          SONARQUBE_JDBC_USERNAME: "sonar"
          SONARQUBE_JDBC_PASSWORD: "sonar"
    steps:
      - name: Wait for SonarQube to be healthy
        run: |
          until curl -s -f -o /dev/null http://localhost:9000; do
            echo "Waiting for SonarQube to be healthy..."
            sleep 10
          done
        timeout-minutes: 15
        
  sonar-scan:
    runs-on: ubuntu-latest
    needs: [build, sonar-server]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Analyze with SonarQube
        uses: SonarSource/sonarqube-scan-action@v1
        env:
          SONAR_TOKEN: ${{ secrets.SONARQUBE_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONARQUBE_HOST }}
        with:
          args: >
            -Dsonar.projectKey=golang
            -Dsonar.java.binaries=.     
  push:
    runs-on: ubuntu-latest

    needs: build

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push action
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/go-web-app:${{github.run_id}} 

  update-newtag-in-helm-chart:
    runs-on: ubuntu-latest

    needs: push
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.TOKEN }}

      - name: Update tag in Helm chart
        run: |
          sed -i 's/tag: .*/tag: "${{github.run_id}}"/' helm/go-web-app-chart/values.yaml

      - name: Commit and push changes
        run: |
          git config --global user.email "vikas.comau@gmail.com"
          git config --global user.name "Vikas Malviya"
          git add helm/go-web-app-chart/values.yaml
          git commit -m "Update tag in Helm chart"
          git push
